source ~/.shell_keys

# add allowing hooks into zsh calls
autoload -Uz add-zsh-hook

# Add version control software info to zsh variables for prompt
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
vcs_precmd() {
    vcs_info
}
# zstyle ':vcs_info:git*' formats $'%F{130}\UF126 %F{208}%b%f '
zstyle ':vcs_info:git*' formats $'%F{130}\uE725 %F{208}%b%f '
add-zsh-hook precmd vcs_precmd

## pretty prompt
export PROMPT=$'%F{yellow}%D{%K:%M:%S} %F{84}%n%F{242}@%F{2}%m%F{242}:%F{31}%1~%f ${vcs_info_msg_0_}%# '

## Prompt live clock: 1 second timeout on resetting prompt
TMOUT=1
TRAPALRM() {
    if ! [[ "$WIDGET" =~ ^(complete-word|fzf-completion|fzf-file-widget|fzf-tab-complete|fzf-history-widget)$ ]]; then
        zle reset-prompt
    fi
}

## Prompt execution time
zmodload zsh/datetime
prompt_preexec() {
  prompt_prexec_realtime=${EPOCHREALTIME}
}
prompt_precmd() {
  if (( prompt_prexec_realtime )); then
    local -rF elapsed_realtime=$(( EPOCHREALTIME - prompt_prexec_realtime ))
    local -rF s=$(( elapsed_realtime%60 ))
    local -ri elapsed_s=${elapsed_realtime}
    local -ri m=$(( (elapsed_s/60)%60 ))
    local -ri h=$(( elapsed_s/3600 ))
    if (( h > 0 )); then
      printf -v prompt_elapsed_time '%ih%im' ${h} ${m}
    elif (( m > 0 )); then
      printf -v prompt_elapsed_time '%im%is' ${m} ${s}
    elif (( s >= 10 )); then
      printf -v prompt_elapsed_time '%.2fs' ${s} # 12.34s
    elif (( s >= 1 )); then
      printf -v prompt_elapsed_time '%.3fs' ${s} # 1.234s
    else
      printf -v prompt_elapsed_time '%ims' $(( s*1000 ))
    fi
    unset prompt_prexec_realtime
  else
    # Clear previous result when hitting ENTER with no command to execute
    unset prompt_elapsed_time
  fi
}
setopt nopromptbang prompt{cr,percent,sp,subst}
add-zsh-hook preexec prompt_preexec
add-zsh-hook precmd prompt_precmd
RPS1='%F{cyan}${prompt_elapsed_time}%F{none}'

## zsh history
# number of history lines to keep in memory
export HISTSIZE=100000000
# number of history lines to keep in history file
export SAVEHIST=$HISTSIZE
# do not share history between zsh sessions
unsetopt share_history  
setopt hist_ignore_all_dups
# commands with a leading space won't be saved into history
setopt hist_ignore_space  

## Basic Hisotry Search
bindkey '[A' history-search-backward
bindkey '[B' history-search-forward

## homebrew
if command -v brew 2>&1 >/dev/null
then
    export PATH="${HOMEBREW_PREFIX}/opt/openssl/bin:$PATH"
    export FPATH="$(brew --prefix)/share/zsh/site-functions/zsh_loaded:${FPATH}"
fi

## AWS
if command -v aws 2>&1 >/dev/null
then
    export AWS_PROFILE=dev
    ## AWS autocomplete
    autoload bashcompinit && bashcompinit
    autoload -Uz compinit && compinit
    complete -C '/usr/local/bin/aws_completer' aws
fi

## pnpm
if command -v pnpm 2>&1 >/dev/null
then
    export PNPM_HOME="/Users/andrewarcher/Library/pnpm"
    export PATH="$PNPM_HOME:$PATH"

    # TURBOREPO - subgraphs stop caching at turborepo; rely on make caching instead
    export TURBO_OPTS="--force"
fi


# fzf
if command -v fzf 2>&1 >/dev/null
then
    [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
    source ~/.fzf-tab/fzf-tab.plugin.zsh
    # https://github.com/Aloxaf/fzf-tab
    export FZF_DEFAULT_COMMAND='fd --type f --hidden --exclude .git'
    zstyle ':fzf-tab:*' default-color $'\033[33m'
    zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
fi

## direnv
if command -v direnv 2>&1 >/dev/null
then
    eval "$(direnv hook zsh)"
fi

show_colors () {
    for i in {0..255}; do
        print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+$'\n'};
     done
}

# git shortcut - open webpage of current repo
alias git-web="git config --get remote.origin.url | head -n 1 | sed -E 's_^git@(.*):_https://\1/_; s/\.git$//' | xargs open"

### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
export PATH="/Users/andrewarcher/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)

# mise
if command -v mise 2>&1 >/dev/null
then
    eval "$(mise activate zsh)"
fi
